pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                echo 'Building the code...'
                // Tool: Maven (for Java) or other build tools based on your project.
                sh 'mvn clean install'  // Replace with the appropriate build command for your project.
            }
        }

        stage('Unit and Integration Tests') {
            steps {
                echo 'Running unit and integration tests...'
                // Tool: JUnit for Java, pytest for Python, etc.
                sh 'mvn test'  // Replace with your test command.
            }
        }

        stage('Code Analysis') {
            steps {
                echo 'Analyzing code...'
                // Tool: SonarQube
                sh 'mvn sonar:sonar'  // Replace with your code analysis command.
            }
        }

        stage('Security Scan') {
            steps {
                echo 'Scanning code for security vulnerabilities...'
                // Tool: OWASP Dependency-Check, SonarQube with security plugins, etc.
                sh 'dependency-check.sh'  // Replace with your security scan command.
            }
        }

        stage('Deploy to Staging') {
            steps {
                echo 'Deploying to staging server...'
                // Tool: AWS CLI, Ansible, etc.
                sh 'aws s3 cp my-app.zip s3://my-staging-bucket/'  // Replace with your deployment command.
            }
        }

        stage('Integration Tests on Staging') {
            steps {
                echo 'Running integration tests on staging...'
                // Tool: Selenium, JUnit, etc.
                sh 'mvn verify'  // Replace with your integration test command.
            }
        }

        stage('Deploy to Production') {
            steps {
                echo 'Deploying to production server...'
                // Tool: AWS CLI, Ansible, etc.
                sh 'aws s3 cp my-app.zip s3://my-production-bucket/'  // Replace with your production deployment command.
            }
        }
    }

    post {
        success {
            mail to: 'lehan.andrahennadi@gmail.com',
                 subject: "Pipeline succeeded",
                 body: "The pipeline has completed successfully.",
                 attachLog: true
        }
        failure {
            mail to: 'lehan.andrahennadi@gmail.com',
                 subject: "Pipeline failed",
                 body: "The pipeline has failed. Please check the logs for details.",
                 attachLog: true
        }
    }
}
